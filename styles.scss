/***********************/
// Settings
/***********************/
//Body color
$bg-1: #F498AD;
$bg-2: #be4e67;
//Boombox color
$radio-1: #00FFF0;
$radio-2: #00DBCD;
$radio-3: #23baa8;
$radio-4: #12ada6;
$radio-5: #0e9790;
$radio-6: #0d8882;
// Yellow button
$key-a1: #EEDB73;
$key-a2: #d6c35a;
$key-a3: #bba83a;
// White button
$key-b1: #f2f2f2;
$key-b2: #dddddd;
$key-b3: #b3b3b3;
// Purple button
$key-c1: #6e82ed;
$key-c2: #5669d5;
$key-c3: #3d52c3;
// Tape
$tape-1: #f2f2f2;
$tape-2: #ed6e79;
$tape-3: #f2f2f2;
// Handle
$handle-1: #6e82ed;
$handle-2: #5669d5;
$handle-3: #3d52c3;
//Big speaker
$big-speaker-1: #f2f2f2;
$big-speaker-2: #dddddd;
$big-speaker-3: #b3b3b3;
//Small speaker
$small-speaker-1: #3dbcee;
$small-speaker-2: #26a6d8;
$small-speaker-3: #1487b4;
//Antenna
$antenna-1: #066435;

/***********************/
// Tools
/***********************/

@mixin cylinder($base, $sides, $degree, $pi, $width, $color) {
    display: flex;
    justify-content: center;
    align-items: center;
	position: absolute;

    &__side{
        position: absolute;
        height: ( 2 * $pi * ($base / 2) ) / $sides ;
        width: $width;
    
        @for $var from 1 to ($sides + 1) {
            &:nth-of-type(#{$var}){
                transform: rotateX( $var * $degree / $sides ) translateZ($base / 2);
            }
        }
        @for $var from 1 to ( ($sides / 2) + 1) {
            &:nth-last-of-type(#{$var}){
                background-color: darken($color, $var * 1.25);
            }
        }
        @for $var from 1 to ( ($sides / 2) + 3) {
            &:nth-of-type(#{$var}){
                background-color: darken($color, $var * 1.25);
            }
        }
    }
    &__top,
    &__bottom{
        position: absolute;
        width: $base;
        height: $base;
        border-radius: 50%;
        transform: rotateY(90deg) translateZ( $width / 2 );
    }
    &__bottom{
        transform: rotateY(90deg) translateZ( $width / -2 );
    }
  
}
@mixin cube($width, $height, $depth) {
    &__front{ @include cube-front($width, $height, $depth); }
    &__back{ @include cube-back($width, $height, $depth); }
    &__right{ @include cube-right($width, $height, $depth); }
    &__left{ @include cube-left($width, $height, $depth); }
    &__top{ @include cube-top($width, $height, $depth);}
    &__bottom{ @include cube-bottom($width, $height, $depth); }
}
//----------------------
@mixin cube-front($width, $height, $depth) {
    width: $width;
    height: $height;
    transform-origin: bottom left;
    transform: rotateX(-90deg) translateZ( -($height - ($depth * 2) ) );
}
@mixin cube-back($width, $height, $depth) {
    width: $width;
    height: $height;
    transform-origin: top left;
    transform: rotateX(-90deg) rotateY(180deg) translateX(-$width) translateY(-$height) ;
}
@mixin cube-right($width, $height, $depth) {
    width: $depth * 2;
    height: $height;
    transform-origin: top left;
    transform: rotateY(90deg) rotateZ(-90deg) translateZ($width) translateX(-$depth * 2) translateY(-$height);
}
@mixin cube-left($width, $height, $depth) {
    width: $depth * 2;
    height: $height;
    transform-origin: top left;
    transform: rotateY(-90deg) rotateZ(90deg) translateY(-$height);
}
@mixin cube-top($width, $height, $depth) {
    width: $width;
    height: $depth * 2;
    transform-origin: top left;
    transform: translateZ($height) ;
}
@mixin cube-bottom($width, $height, $depth) {
    width: $width;
    height: $depth * 2;
    transform-origin: top left;
    transform: rotateY(180deg) translateX(-$width);
}
@mixin face-ani($animation, $time, $side, $width-el, $height-el, $depth-el) {

    animation: #{$animation} #{$time} infinite ease;

    @keyframes #{$animation} {
        0%, 15%, 45%, 60%, 62%, 68%{
            @if $side == "cube-front" { @include cube-front($width-el, $height-el, $depth-el); }
            @else if $side == "cube-back" { @include cube-back($width-el, $height-el, $depth-el); }
            @else if $side == "cube-right" { @include cube-right($width-el, $height-el, $depth-el); }
            @else if $side == "cube-left" { @include cube-left($width-el, $height-el, $depth-el); }
            @else if $side == "cube-top" { @include cube-top($width-el, $height-el, $depth-el); }
            @else if $side == "cube-bottom" { @include cube-bottom($width-el, $height-el, $depth-el); }

        }
        20%, 40%, 58%, 64%, 70%, 100%{
            @if $side == "cube-front" { @include cube-front($width-el, $height-finish, $depth-el); }
            @else if $side == "cube-back" { @include cube-back($width-el, $height-finish, $depth-el); }
            @else if $side == "cube-right" { @include cube-right($width-el, $height-finish, $depth-el); }
            @else if $side == "cube-left" { @include cube-left($width-el, $height-finish, $depth-el); }
            @else if $side == "cube-top" { @include cube-top($width-el, $height-finish, $depth-el); }
            @else if $side == "cube-bottom" { @include cube-bottom($width-el, $height-el, $depth-el); }
        }
    }
}
@mixin cube-color($color) {
    &__front{ background-color: darken($color, 5); }
    &__back{ background-color: darken($color, 10) }
    &__right{ background-color: darken($color, 10) }
    &__left{ background-color: darken($color, 20); }
    &__top{ background-color: $color; }
    &__bottom{ background-color: darken($color, 20);}
}
/***********************/
// Reset
/***********************/
*, *::after, *::before {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	user-select: none;
    transform-style: preserve-3d;

    -webkit-tap-highlight-color: transparent;
    user-select: none;
    outline: none;
    // appearance: none;
}
/***********************/
// Tags
/***********************/
body{
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    width: 100%;

    overflow: hidden;
	cursor: pointer;
    background-color: $bg-1;
    font-family: sans-serif;
    font: 16px;
}
.face{ position: absolute; }
.flex{
    display: flex;
    justify-content: center;
    align-items: center;
}
/***********************/
// 
/***********************/
.temp{
    position: absolute;
    bottom: 50px;
    left: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 20000px;
    transform: translateZ(20000px);
    background-color: $key-b1;
    padding: 10px;
    box-shadow: 0 0 4px 2px rgba(black, .125);

    > * { margin-right: 20px;}
}
select{
    padding: 10px 20px;
    font-size: 18px;
}


.svgs{
    position: absolute;
    left: 50%;
    bottom: 50px;
    transform: translateX(-50%);

    z-index: 20001px;
    transform: translateZ(20001px);
}
.svg-icon {
    width: 30px;
    height: 30px;
    &:hover{ transform: scale(1.1);}
}

.svg-icon path,
.svg-icon polygon,
.svg-icon rect {
    fill: $key-b1;
}

.svg-icon circle {
    stroke: white;
    stroke-width: 1;
}
.s{ display: none; }
/***********************/
// Components
/***********************/
.boombox{
	position: absolute;
    width: 27vw;
    height: 9vw;

	transform:
		perspective(10000px)
		rotateX(55deg)
		rotateZ(33deg)
        translateZ(-12vw)
	;
}
.boombox-a{ animation: boombox-a infinite 1s alternate; }
.shadow{
    width: 100%;
    height: 100%;
    position: relative;
    background-color: $bg-2;

    &-a{
        position: absolute;
        bottom: 0;
        left: 0;
        width: 115%;
        height: 140%;
        background-color: $bg-2;
    }
    &-b{
        position: absolute;
        top: -70%;
        left: 0;
        width: 110%;
        height: 40%;
        background-color: $bg-2;
    }
    &-c{
        position: absolute;
        top: -100%;
        left: 60%;
        width: 21vw;
        height: 40%;
        transform: translateX(-50%);

        border-top: 1vw solid $bg-2;
        border-left: .5vw solid $bg-2;
        border-right: .5vw solid $bg-2;
    }
    &-d,
    &-e{
        position: absolute;
        top: -150%;
        left: 60%;
        width: 26vw;
        height: 100%;
        transform: translateX(-50%);
    }
    &-d{ border-left: .35vw solid $bg-2; }
    &-e{ border-right: .35vw solid $bg-2; }
}
//------------------
.base{
    $width-el: 26vw;
    $height-el: .75vw;
    $depth-el: 4vw;

    @include cube($width-el, $height-el, $depth-el);
    width: $width-el;
    height: $depth-el * 2;
    position: absolute;

    &__front{ background-color: $radio-3; }
    &__back{ background-color: $radio-5; }
	&__right{ background-color: $radio-5; }
	&__left{ background-color: $radio-2; }
	&__top{ background-color: $radio-4;  }
	&__bottom{  background-color: $radio-4; }
}
.b-base{
    $width-el: 27vw;
    $height-el: 15vw;
    $depth-el: 1vw;

	@include cube($width-el, $height-el, $depth-el);
    width: $width-el;
    height: $depth-el;
    position: absolute;

    left: 50%;
    transform: translateX(-50%);

    &__front{ background-color: $radio-2; }
    &__back{ background-color: $radio-3; }
    &__right{ background-color: $radio-3; }
    &__left{ background-color: $radio-1; }
    &__top{ background-color: $radio-1;}
    &__bottom{  background-color: $radio-3; }
}
.f-base{
    $width-el: 26.5vw;
    $height-el: 12vw;
    $depth-el: 3vw;

	@include cube($width-el, $height-el, $depth-el);
    width: $width-el;
    height: $depth-el;
    position: absolute;

    top: 2.1vw;
    left: 50%;
    transform: translateX(-50%);

    &__front{ background-color: $radio-2; }
    &__back{ 
        background-color: $radio-3; 
        box-shadow: 
            .25vw .25vw 0 $radio-2,
            -.25vw .25vw 0 $radio-4,
            -.25vw -.1vw 0 $radio-3,
            .25vw -.1vw 0 $radio-4
        ;
    }
	&__right{ background-color: $radio-3; }
	&__left{ background-color: $radio-1; }
	&__top{ background-color: $radio-1;}
	&__bottom{ background-color: $radio-3; }
}
//*********************************
//*********************************
.tuner{
    position: absolute;
    top: .75vw;
    left: 50%;
    transform: translateX(-50%);
    width: 16vw;
    height: 1.5vw;

    background-color: $radio-5;
    box-shadow: 
        .1vw .1vw 0 $radio-6,
        -.1vw .1vw 0 $radio-6,
        .1vw -.1vw 0 $radio-6,
        -.1vw -.1vw 0 $radio-6
    ;
    &__line{
        position: absolute;
        width: 90%;
        height: .15vw;
        background-color: $key-b3;
        border-radius: .15vw;
    }
    &__current{
        position: absolute;
        left: 50%;
        width: .2vw;
        height: 80%;
        background-color: $key-c3;
        border-radius: .15vw;

		animation: indicator 8s infinite alternate;
    }
}
.handle{
    width: 21vw;
    height: 1vw;

    &-l,
    &-r{
        $width-el: .25vw;
        $height-el: 2vw;
        $depth-el: .5vw;
        @include cube($width-el, $height-el, $depth-el);

        width: $width-el;
        height: $depth-el * 2;
        position: absolute;

        &__front{ background-color: $handle-2; }
        &__back{ background-color: $handle-3; }
        &__right{ background-color: $handle-3; }
        &__left{ background-color: $handle-1; }
        &__top{ background-color: $handle-1;}
        &__bottom{ background-color: $handle-3; }
    }

    &-l{ left: 0;}
    &-r{ right: 0; }

    &-t{
        $width-el: 21vw;
        $height-el: 1vw;
        $depth-el: .5vw;
        @include cube($width-el, $height-el, $depth-el);

        width: $width-el;
        height: $depth-el * 2;
        position: absolute;
        transform: translateZ(2vw);
        
        &__front{ background-color: $handle-2; }
        &__back{ background-color: $handle-3; }
        &__right{ background-color: $handle-3; }
        &__left{ background-color: $handle-1; }
        &__top{ background-color: $handle-1;}
        &__bottom{ background-color: $handle-3; }
    }
    &__shadow{
        position: absolute;
        width: 100%;
        height: 100%;
        background-color: $radio-2;
        opacity: .4;

    }
}
.controls{
    position: absolute;
    width: 4vw;
    top: calc(50% + .5vw);
    height: 2.5vw;
    display: flex;
    justify-content: space-between;
    transform: translateY(50%);

    &-l{ 
        left: 1vw; 
        
        .controls__s:nth-of-type(1) .control:nth-of-type(1){
            top: 60%;    
            .control__front{ background-color: $key-a2; }
            .control__back{ background-color: $key-a3; }
            .control__right{ background-color: $key-a3; }
            .control__left{ background-color: $key-a1; }
            .control__top{ background-color: $key-a1;}
            .control__bottom{  background-color: $key-a3; }      
        }
        .controls__s:nth-of-type(4) .control:nth-of-type(1){
            top: 30%;    
            .control__front{ background-color: $key-c2; }
            .control__back{ background-color: $key-c3; }
            .control__right{ background-color: $key-c3; }
            .control__left{ background-color: $key-c1; }
            .control__top{ background-color: $key-c1;}
            .control__bottom{  background-color: $key-c3; }       
        }
    }
    &-r{ 
        right: 1vw; 

        .controls__s:nth-of-type(1) .control:nth-of-type(1),
        .controls__s:nth-last-of-type(1) .control:nth-of-type(1){
            top: 30%;    
            .control__front{ background-color: $key-c2; }
            .control__back{ background-color: $key-c3; }
            .control__right{ background-color: $key-c3; }
            .control__left{ background-color: $key-c1; }
            .control__top{ background-color: $key-c1;}
            .control__bottom{  background-color: $key-c3; }       
        }
        .controls__s:nth-last-of-type(1) .control:nth-of-type(1){
            top: 60%;    
        }
    }
    &__s{
        width: .4vw;
        height: 100%;
        border-radius: .5vw;
        background-image: 
            linear-gradient(
                to right, 
                darken($radio-1, 3) .1vw, 
                $radio-2 .1vw, 
                $radio-2 .2vw, 
                darken($radio-1, 3) .3vw
            );
    }
}
.control{
    $width-el: .4vw;
    $height-el: .25vw;
    $depth-el: .25vw;

	@include cube($width-el, $height-el, $depth-el);
    width: .4vw;
  
    position: relative;
    margin: .035vw;
    height: .5vw;

    &__front{ background-color: $key-b2; }
    &__back{ background-color: $key-b3; }
    &__right{ background-color: $key-b3; }
    &__left{ background-color: $key-b1; }
    &__top{ background-color: $key-b1;}
    &__bottom{  background-color: $key-b3; }
}

.ca-a{ animation: circle-speaker .75s infinite alternate; }
.circle{   
    $sides: 36;
    $degree: 360deg;

    border-radius: 50%;
    box-shadow: 
        .15vw .15vw 0 $radio-3,
        -.15vw .15vw 0 $radio-3,
        .15vw -.15vw 0 $radio-3,
        -.15vw -.15vw 0 $radio-3   
    ;
    position: absolute;
    
    &--left,
    &--right{
        width: 7vw;
        height: 7vw;
        bottom: 1vw;
        background-color: darken($big-speaker-3, 10);
    }
    &--left{ left: 1vw;}
    &--right{ right: 1vw;}

    &--top-left,
    &--top-right{
        width: 2.5vw;
        height: 2.5vw;
        top: 1vw;
    }
    &--top-left{ left: 1vw; }
    &--top-right{ right: 1vw; }

    &-a{
        $base: 7vw;
        $pi: 3.5;
        $width: .95vw;   

        position: absolute;
        width: $width;
        height: $base;
        transform: rotateY(90deg) translateX(-50%);

        @include cylinder($base, $sides, $degree, $pi, $width, $key-b1);

        &__bottom{ background-color: $big-speaker-1; }
    }
    &-b{
        $base: 5vw;
        $pi: 3.2;
        $width: .95vw;   

        position: absolute;
        width: $width;
        height: $base;
        transform: rotateY(90deg) translateX(-50%);

        @include cylinder($base, $sides, $degree, $pi, $width, $big-speaker-1);
    }
    &-c{
        $base: 2.5vw;
        $pi: 3.5;
        $width: .5vw;   


        position: absolute;
        width: $width;
        height: $base;
        transform: rotateY(90deg) translateX(-55%);
        @include cylinder($base, $sides, $degree, $pi, $width, $small-speaker-1);

        &__bottom{ background-color: $small-speaker-1; }
    }
    &--al,
    &--ar{
        top: 50%;
        width: .25vw;
        height: .25vw;
        box-shadow: none;
        transform-origin: bottom;
    }
    &--al{
        left: .5vw;
        .circle-d{ transform: translateZ(5vw) rotateY(90deg); }
    }
    &--ar{
        right: .5vw;
        .circle-d{ transform: translateZ(5vw) rotateY(90deg); }
    }
    &-d{
        $base: .25vw;
        $pi: 3.5;
        $width: 10vw;  
        $sides: 10;
        position: absolute;
        width: $width;
        height: $base;
        @include cylinder($base, $sides, $degree, $pi, $width, $antenna-1);
    }
}

$width-el: 7vw;
$height-el: .5vw;
$depth-el: 3.25vw;
$height-finish: .75vw;

.square{
 
    @include cube($width-el, $height-el, $depth-el);

    width: $width-el;
    height: $depth-el * 2;
    position: absolute;
    border-radius: 0;

    &__front{ background-color: $big-speaker-3;}
    &__back{ background-color: $big-speaker-1; }
    &__right{ background-color: $big-speaker-3;}
    &__left{ background-color: $big-speaker-1;}
    &__top{ background-color: $big-speaker-2;}
    &__bottom{  background-color: $big-speaker-3; } 
}

.sfa{ @include face-ani(grow-front-speaker, .5s, cube-front, $width-el, $height-el, $depth-el);}
.sba{ @include face-ani(grow-back-speaker, .5s, cube-back, $width-el, $height-el, $depth-el);}
.sra{ @include face-ani(grow-right-speaker, .5s, cube-right, $width-el, $height-el, $depth-el);}
.sla{ @include face-ani(grow-left-speaker, .5s, cube-left, $width-el, $height-el, $depth-el);}
.sta{ @include face-ani(grow-bottom-speaker, .5s, cube-top, $width-el, $height-el, $depth-el);}


$width-el: 1vw;
$height-el: .65vw;
$depth-el: .5vw;
$height-finish: .3vw;

.button{
    
	@include cube($width-el, $height-el, $depth-el);
    width: $width-el;
    height: $depth-el * 2;
    margin: .035vw;

    &__front{ background-color: $key-b2; }
    &__back{ background-color: $key-b3;}
    &__right{ background-color: $key-b3;}
    &__left{ background-color: $key-b1;}
    &__top{ background-color: $key-b1;}
    &__bottom{  background-color: $key-b3; }
}
.f-buttons{
    position: absolute;
    display: flex;
    left: 50%;
    transform: translateX(-50%);
    outline: .2vw solid $radio-3;
    background-color: $radio-3;

    &--front{
        bottom: 1.5vw;

        .button__front{ background-color: $key-b3; }
        .button__back{ background-color: $key-b1; }
        .button__right{ background-color: $key-b3; }
        .button__left{ background-color: $key-b2; }
        .button__top{ background-color: $key-b2;}
        .button__bottom{  background-color: $key-b3; }

        .button{
            @for $i from 1 through 5 {
                &:nth-of-type(#{$i}) {
                    animation: button-down .5s infinite alternate #{$i / 15 }s;
                }
            }
            &:nth-last-of-type(1){
                .button__front{ background-color: $key-c3; }
                .button__back{ background-color: $key-c1; }
                .button__right{ background-color: $key-c3; }
                .button__left{ background-color: $key-c2; }
                .button__top{ background-color: $key-c2;}
                .button__bottom{  background-color: $key-c3; }
            }
        }

      
    }

    &--top{
        bottom: 2.5vw;
    
        .button:nth-of-type(1){
            .button__front{ 
                background-color: $key-a2; 
                @include face-ani(grow-front-key, 5s, cube-front, $width-el, $height-el, $depth-el);
            }
            .button__back{ 
                background-color: $key-a1; 
                @include face-ani(grow-back-key, 5s, cube-back, $width-el, $height-el, $depth-el);
            }
            .button__right{ 
                background-color: $key-a3; 
                @include face-ani(grow-right-key, 5s, cube-right, $width-el, $height-el, $depth-el);
            }
            .button__left{ 
                background-color: $key-a1; 
                @include face-ani(grow-left-key, 5s, cube-left, $width-el, $height-el, $depth-el);
            }
            .button__top{ 
                background-color: $key-a1;
                @include face-ani(grow-top-key, 5s, cube-top, $width-el, $height-el, $depth-el);
            }
            .button__bottom{  background-color: $key-a3; }
        }
        .button:nth-last-of-type(1){
            .button__front{ 
                background-color: $key-a2; 
                @include face-ani(grow-front-key, 3s, cube-front, $width-el, $height-el, $depth-el);
            }
            .button__back{ 
                background-color: $key-a1; 
                @include face-ani(grow-back-key, 3s, cube-back, $width-el, $height-el, $depth-el);
            }
            .button__right{ 
                background-color: $key-a3; 
                @include face-ani(grow-right-key, 3s, cube-right, $width-el, $height-el, $depth-el);
            }
            .button__left{ 
                background-color: $key-a1; 
                @include face-ani(grow-left-key, 3s, cube-left, $width-el, $height-el, $depth-el);
            }
            .button__top{ 
                background-color: $key-a1;
                @include face-ani(grow-top-key, 3s, cube-top, $width-el, $height-el, $depth-el);
            }
            .button__bottom{  background-color: $key-a3; }
        }
        .button:nth-last-of-type(3){
            .button__front{ @include face-ani(grow-front-key, 3.2s, cube-front, $width-el, $height-el, $depth-el);}
            .button__back{ @include face-ani(grow-back-key, 3.2s, cube-back, $width-el, $height-el, $depth-el);}
            .button__right{ @include face-ani(grow-right-key, 3.2s, cube-right, $width-el, $height-el, $depth-el);}
            .button__left{ @include face-ani(grow-left-key, 3.2s, cube-left, $width-el, $height-el, $depth-el);}
            .button__top{ @include face-ani(grow-top-key, 3.2s, cube-top, $width-el, $height-el, $depth-el);}
        }
    }
}

.opt{
    opacity: 0;
    transition: 1s;
}
.visualizer{
    display: flex;
    justify-content: center;
    align-items: flex-end;

    width: 6.5vw;
    height: 2.25vw;
    position: absolute;
    top: 1vw;
    left: 50%;
    transform: translateX(-50%);
    background-color: $radio-5;

    box-shadow: 
        .1vw .1vw 0 $radio-6,
        -.1vw .1vw 0 $radio-6,
        .1vw -.1vw 0 $radio-6,
        -.1vw -.1vw 0 $radio-6
    ;

    &__line{
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        align-items: center;
        height: 100%;
        width: .5vw;
        margin: 0 .03vw;

        transform: rotateZ(180deg);
        background-color: rgba(black, .25);
        transition: 1s;


        @for $i from 1 through 12 {
            &:nth-of-type(#{$i}) {
                animation: visualizer-line .75s ease-in alternate infinite #{$i / 10 }s;
            }
        }
    }
  
}
.cassette{
    position: absolute;
    top: 4.5vw;
    left: 50%;
    width: 6.7vw;
    height: 4vw;
    transform: translateX(-50%);

    border: .75vw solid $tape-1;
    background-color: $tape-2;

    &::before,
    &::after{
        content: '';
        position: absolute;
        width: 1vw;
        height: 1vw;
        background-color: $tape-3;
        border-radius: 50%;
        top: 50%;
        transform: translateY(-50%);
    }
    &::before{ left: 1vw;}
    &::after{ right: 1vw;}

}
/***********************/
// Animations
/***********************/
@keyframes boombox-a {
	0%, 10%, 30%, 40%, 50%, 70%, 90%{
		transform:
			perspective(10000px)
			rotateX(55deg)
			rotateZ(33deg)
			translateZ(-12vw)
		;
	}
	15%, 20%, 35%, 45%, 60%, 80%, 100%{
		transform:
			perspective(10000px)
			rotateX(53deg)
			rotateZ(33deg)
			translateZ(-12vw)
		;
	}
}
@keyframes visualizer-line {
    0%, 100%{ height: 60%; }
    24%{ height: 80%; }
    25%, 30%{ height: 85%; }
    55%, 60%{ height: 65%; }
    61%, 65%{ height: 90%; }
    80%, 82%{ height: 50%; }
    83%, 90%{ height: 40%; }
    95%{ height: 40%; }
}
@keyframes button-down {
    0%{transform: translateY(0);}
    50%, 100%{transform: translateY(-.15vw) ;}
}
@keyframes circle-speaker {
    0%, 15%, 45%, 60%, 62%, 68%{transform: translateZ(0) rotateY(90deg) translateX(-50%) ;}
    20%, 40%, 58%, 64%, 70%, 100%{transform: translateZ(-.3vw) rotateY(90deg) translateX(-50%)  ;}
}
@keyframes indicator {
	0%, 10%, 70%{ transform: translateX(-4vw);}
	20%, 30%, 80%, 90%, 100%{ transform: translateX(0vw);}
	25%, 60%, 95%{ transform: translateX(-1vw);}
	35%, 50%{ transform: translateX(2vw);}
	38%, 45%, 52%{ transform: translateX(4vw);}
}




